---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates an EC2 instance to create artifacts required for the Fabric Network, as well as make it available for CLI access.
Parameters:
  ChannelName:
    Type: String
  RootDomain:
    Type: String
  Org1SubDomain:
    Type: String
  Org2SubDomain:
    Type: String
  Org3SubDomain:
    Type: String
  NetworkSubnetID:
    Type: AWS::EC2::Subnet::Id
  EC2InstanceProfileArn:
    Type: String
  EC2KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  EC2InstanceType:
    Type: String
  NodeAMIOS:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: Can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: "Amazon-Linux-HVM"
    Description: "AMI type."
    Type: "String"
  DockerReleaseTag:
    Type: String
  DockerImageRepositoryURL:
    Type: String
  LogLevel:
    Type: String
  NestedTemplateOrigin:
    Type: String

Mappings:
  LinuxAMINameMap:
    Amazon-Linux-HVM:
      Code: AMZNLINUXHVM
  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2017.09.1.20180307-x86_64-gp2
    ap-northeast-1:
      AMZNLINUXHVM: ami-a77c30c1
    ap-northeast-2:
      AMZNLINUXHVM: ami-5e1ab730
    ap-south-1:
      AMZNLINUXHVM: ami-7c87d913
    ap-southeast-1:
      AMZNLINUXHVM: ami-e2adf99e
    ap-southeast-2:
      AMZNLINUXHVM: ami-43874721
    ca-central-1:
      AMZNLINUXHVM: ami-5b55d23f
    eu-central-1:
      AMZNLINUXHVM: ami-ac442ac3
    eu-west-1:
      AMZNLINUXHVM: ami-3bfab942
    eu-west-2:
      AMZNLINUXHVM: ami-dff017b8
    sa-east-1:
      AMZNLINUXHVM: ami-5339733f
    us-east-1:
      AMZNLINUXHVM: ami-1853ac65
    us-east-2:
      AMZNLINUXHVM: ami-25615740
    us-west-1:
      AMZNLINUXHVM: ami-bf5540df
    us-west-2:
      AMZNLINUXHVM: ami-d874e0a0

  RegionToResourceRegion:
    us-east-1:
      to: us-east-1
    us-east-2:
      to: us-east-2
    us-west-2:
      to: us-west-2
    us-west-1:
      to: us-west-2
    ca-central-1:
      to: us-east-1
    eu-central-1:
      to: us-east-1
    eu-west-1:
      to: us-east-1
    eu-west-2:
      to: us-east-1
    eu-west-3:
      to: us-east-1
    ap-northeast-2:
      to: us-east-1
    ap-northeast-1:
      to: us-east-1
    ap-southeast-2:
      to: us-east-1
    ap-southeast-1:
      to: us-east-1
    sa-east-1:
      to: us-east-1
    ap-south-1:
      to: us-east-1

  RegionInformationMap:
    us-east-1:
      ResourceAccountId: 354658284331
    us-east-2:
      ResourceAccountId: 763976151875
    us-west-2:
      ResourceAccountId: 712425161857

Resources:
  EC2InstanceForDev:
    Type: "AWS::EC2::Instance"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
    Properties:
      IamInstanceProfile:
        !Select [ 1, !Split [ "/", !Ref EC2InstanceProfileArn ] ]
      ImageId:
        Fn::FindInMap:
        - AWSAMIRegionMap
        - Ref: AWS::Region
        - Fn::FindInMap:
          - LinuxAMINameMap
          - Ref: NodeAMIOS
          - "Code"
      InstanceType: !Ref EC2InstanceType
      KeyName: !Ref EC2KeyPairName
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: EC2SecurityGroup
          SubnetId: !Ref NetworkSubnetID
      Tags:
        - Key: "Name"
          Value:
            Fn::Join:
              - "-"
              - - Ref: AWS::StackName
                - "DevBox"
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -x\n"
            - "yum install -y aws-cfn-bootstrap\n"
            - "res=$?\n"
            - "echo $res\n"
            - "mkdir /tmp/fabric-install/ \n"
            - "cd /tmp/fabric-install/ \n"
            - "wget "
            - !Join ["", [ !Ref NestedTemplateOrigin, "HyperLedger-BasicNetwork.tgz"] ]
            - " -O /home/ec2-user/HyperLedger-BasicNetwork.tgz\n"
            - "cd /home/ec2-user\n"
            - "tar xzvf HyperLedger-BasicNetwork.tgz\n"
            - "rm /home/ec2-user/HyperLedger-BasicNetwork.tgz\n"
            - "chown -R ec2-user:ec2-user HyperLedger-BasicNetwork\n"
            - "chmod +x /home/ec2-user/HyperLedger-BasicNetwork/artifacts/first-run-standalone.sh\n"
            - "/home/ec2-user/HyperLedger-BasicNetwork/artifacts/first-run-standalone.sh "
            - Fn::Join:
              - " "
              - - Fn::FindInMap:
                  - RegionToResourceRegion
                  - Ref: AWS::Region
                  - to
                - Ref: RootDomain
                - Ref: Org1SubDomain
                - Ref: Org2SubDomain
                - Ref: Org3SubDomain
                - Ref: ChannelName
                - Ref: DockerImageRepositoryURL
                - Fn::FindInMap:
                    - RegionInformationMap
                    - Fn::FindInMap:
                      - RegionToResourceRegion
                      - Ref: AWS::Region
                      - to
                    - ResourceAccountId
            - "\n"
            - "res=$?\n"
            - "echo $res\n"
            - "# Signal init result\n"
            - "/opt/aws/bin/cfn-signal -e $res "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource EC2InstanceForDev"
            - "         --region "
            - Ref: AWS::Region
            - "\n"

Outputs:
  ExplorerURL:
    Value: !Join ["", ["http://", !GetAtt [ EC2InstanceForDev, "PublicDnsName"], ":80" ]]
  DevDesktopInstanceId:
    Value: !Ref EC2InstanceForDev
  DevDesktopInstancePrivateDnsName:
    Value: !GetAtt EC2InstanceForDev.PrivateDnsName
  DevDesktopInstancePublicDnsName:
    Value: !GetAtt EC2InstanceForDev.PublicDnsName
